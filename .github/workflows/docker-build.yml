name: Reusable Docker Build and Publish

on:
  workflow_call:
    inputs:
      # --- Basic Information ---
      app_name:
        required: true
        type: string
      app_port:
        required: true
        type: number
      architecture:
        required: true
        type: string
      debian_version_codename:
        required: true
        type: string

      # --- Compatibility Layer ---
      compat_layer:
        required: false
        type: string
        default: "" # Defaults to no compatibility layer if not provided.
      wine_version:
        required: false
        type: string
        default: ""

      # --- Box86/Box64 Versions ---
      box86_version:
        required: false
        type: string
        default: ""
      box64_version:
        required: false
        type: string
        default: ""

jobs:
  docker:
    runs-on: ubuntu-latest
    # --- ADD THIS PERMISSIONS BLOCK ---
    # This grants the GITHUB_TOKEN write permissions for packages,
    # allowing the job to publish the Docker image to GHCR.
    permissions:
      contents: read
      packages: write
    # ------------------------------------
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/docker-${{ inputs.app_name }}-server

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/${{ inputs.architecture }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_NAME=${{ inputs.app_name }}
            DEBIAN_VERSION_CODENAME=${{ inputs.debian_version_codename }}
            COMPAT_LAYER=${{ inputs.compat_layer }}
            WINE_VERSION=${{ inputs.wine_version }}
            BOX86_VERSION=${{ inputs.box86_version }}
            BOX64_VERSION=${{ inputs.box64_version }}

